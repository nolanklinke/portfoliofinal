{"version":3,"sources":["components/Portrait/me.jpg","components/Nav/Nav.js","pages/Home/Home.js","components/Portrait/Portrait.js","components/Aboutme/Aboutme.js","pages/About/About.js","components/Card/Card.js","pages/Portfolio/Portfolio.js","pages/Resume/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showNav","toggleNav","bind","assertThisInitialized","event","preventDefault","setState","window","innerWidth","react_default","a","createElement","className","class","onClick","href","alt","src","id","Component","Home","components_Nav_Nav","React","Portrait","meJPG","Aboutme","About","components_Portrait_Portrait","components_Aboutme_Aboutme","Card","props","name","shortDescription","technoUsed","image","Portfolio","projects","map","card","components_Card_Card","url","Resume","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qrDCoEzBC,qBAhEb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAQ,CACXC,SAAS,GAEXR,EAAKS,UAAYT,EAAKS,UAAUC,KAAfT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANLA,yEASJY,GACRA,EAAMC,iBAEDV,KAAKI,MAAMC,QAKdL,KAAKW,SAAS,CACZN,SAAS,IALXL,KAAKW,SAAS,CACZN,SAAS,gDAUTO,OAAOC,WAAa,KACtBb,KAAKW,SAAS,CACZN,SAAS,qCAMb,OACES,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,QAAME,MAAM,gBAAgBC,QAASnB,KAAKM,WACxCQ,EAAAC,EAAAC,cAAA,KAAGE,MAAM,iBAEXJ,EAAAC,EAAAC,cAAA,KAAGI,KAAK,IAAIH,UAAU,QACpBH,EAAAC,EAAAC,cAAA,OAAKK,IAAI,QAAQC,IAAI,iBAEtBtB,KAAKI,MAAMC,QACVS,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWM,GAAG,WAC1BT,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,SAASH,UAAU,aAA3B,UAIFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,aAAaH,UAAU,aAA/B,cAIFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,UAAUH,UAAU,aAA5B,YAKF,aA3DMO,cCeHC,0LAZX,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,KAAGO,GAAG,SAAN,sCAPSI,IAAMH,qCCMVI,EANE,kBACfd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,KAAKK,IAAKO,IAAOR,IAAI,mBCYzBS,EAhBC,kBACdhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIO,GAAG,WAAP,OACAT,EAAAC,EAAAC,cAAA,KAAGO,GAAG,UAAN,shBCcWQ,0LAXX,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,eAPUN,IAAMH,YCgBXU,SAnBF,SAAAC,GAAK,OAChBrB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGI,KAAMe,EAAMf,MACbN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAKmB,EAAMC,MACXtB,EAAAC,EAAAC,cAAA,SAAImB,EAAME,kBACVvB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAKmB,EAAMG,aAEbxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaK,IAAKa,EAAMI,MAAOlB,IAAKc,EAAMC,sBCiBtDI,oNAxBbpC,MAAQ,CACNqC,oFAGA,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZjB,KAAKI,MAAMqC,SAASC,IAAI,SAAAC,GAAI,OAC3B7B,EAAAC,EAAAC,cAAC4B,EAAD,CACExB,KAAMuB,EAAKE,IACXN,MAAOI,EAAKJ,MACZlB,IAAKsB,EAAKP,KACVA,KAAMO,EAAKP,KACXC,iBAAkBM,EAAKN,iBACvBC,WAAYK,EAAKL,wBAhBPX,IAAMH,YCQfsB,0LATX,OACEhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAAA,oBALaW,IAAMH,YC2BZuB,mLAfX,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5B,IACjCX,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWtB,IACtCjB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAWb,IAC1C1B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWP,cATjCtB,aCFE8B,QACW,cAA7B1C,OAAO2C,SAASC,UAEe,UAA7B5C,OAAO2C,SAASC,UAEhB5C,OAAO2C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e2fe3f04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.e748dee1.jpg\";","import React, { Component } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nclass Nav extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      showNav: false\r\n    };\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n  }\r\n\r\n  toggleNav(event) {\r\n    event.preventDefault();\r\n\r\n    if (!this.state.showNav) {\r\n      this.setState({\r\n        showNav: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showNav: false\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window.innerWidth > 768) {\r\n      this.setState({\r\n        showNav: true\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <span class=\"navbar-toggle\" onClick={this.toggleNav}>\r\n          <i class=\"fas fa-bars\" />\r\n        </span>\r\n        <a href=\"/\" className=\"logo\">\r\n          <img alt=\"donut\" src=\"favicon.ico\" />\r\n        </a>\r\n        {this.state.showNav ? (\r\n          <ul className=\"main-nav\" id=\"js-menu\">\r\n            <li>\r\n              <a href=\"/about\" className=\"nav-links\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/portfolio\" className=\"nav-links\">\r\n                Portfolio\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/resume\" className=\"nav-links\">\r\n                Resume\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        ) : null}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Nav from \"../../components/Nav\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home-view\">\r\n        <Nav />\r\n        <div className=\"home-content\">\r\n          <h1>Nolan Klinke</h1>\r\n          <p id=\"homeP\">Full Stack Web Developer.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Portrait.css\";\r\nimport meJPG from \"./me.jpg\";\r\n\r\nconst Portrait = () => (\r\n  <div>\r\n    <img className=\"me\" src={meJPG} alt=\"Nolan Klinke\" />\r\n  </div>\r\n);\r\n\r\nexport default Portrait;\r\n","import React from \"react\";\r\n\r\nconst Aboutme = () => (\r\n  <div>\r\n    <h1 id=\"abouth1\">hi.</h1>\r\n    <p id=\"aboutP\">\r\n      My name is Nolan Klinke and I am a Full Stack Web Developer. I have\r\n      experience in many different technologies, but consider myself proficient\r\n      in the MERN stack. I enjoy building new applications and creating dynamic\r\n      experiences through DOM manipulation and custom styling. I am a die-hard\r\n      problem solver at heart and thoroughly enjoy the satisfaction of figuring\r\n      out a complicated task or challenge. The things I enjoy most are spending\r\n      time with my wife, Brianna, our pup, Wiggles, video games, and indulging\r\n      in a donut or two.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Aboutme;\r\n","import React from \"react\";\r\nimport Nav from \"../../components/Nav\";\r\nimport Portrait from \"../../components/Portrait/Portrait\";\r\nimport Aboutme from \"../../components/Aboutme/Aboutme\";\r\nimport \"./About.css\";\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"about-view\">\r\n        <Nav />\r\n        <div className=\"about-content\">\r\n          <Portrait />\r\n          <Aboutme />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = props => (\r\n  <div>\r\n    <a href={props.href}>\r\n      <div className=\"flip-card\">\r\n        <div className=\"flip-card-inner\">\r\n          <div className=\"flip-card-front\">\r\n            <h1>{props.name}</h1>\r\n            <p>{props.shortDescription}</p>\r\n            <h3>Built With:</h3>\r\n            <h4>{props.technoUsed}</h4>\r\n          </div>\r\n          <div className=\"flip-card-back\">\r\n            <img className=\"projectIMG\" src={props.image} alt={props.name} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  </div>\r\n);\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../components/Card\";\r\nimport Nav from \"../../components/Nav\";\r\nimport projects from \"../../utils/projects.json\";\r\nimport \"./Portfolio.css\";\r\n\r\nclass Portfolio extends React.Component {\r\n  state = {\r\n    projects\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"portfolio-view\">\r\n        <Nav />\r\n        <div className=\"card-content\">\r\n          {this.state.projects.map(card => (\r\n            <Card\r\n              href={card.url}\r\n              image={card.image}\r\n              alt={card.name}\r\n              name={card.name}\r\n              shortDescription={card.shortDescription}\r\n              technoUsed={card.technoUsed}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\nimport Nav from \"../../components/Nav\";\r\nimport \"./Resume.css\";\r\n\r\nclass Resume extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"resume-view\">\r\n        <Nav />\r\n        <div />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  Link\n} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Resume from \"./pages/Resume\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/portfolio\" component={Portfolio} />\n            <Route exact path=\"/resume\" component={Resume} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}